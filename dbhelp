import 'package:sqflite/sqflite.dart';
import 'package:path/path.dart';
import 'package:path_provider/path_provider.dart';
import 'dart:io';

class DatabaseHelper {
  static final DatabaseHelper _instance = DatabaseHelper._internal();
  factory DatabaseHelper() => _instance;
  DatabaseHelper._internal();

  static Database? _db;

  Future<Database> get db async {
    if (_db != null) return _db!;
    _db = await initDb();
    return _db!;
  }

  Future<Database> initDb() async {
    Directory documentsDirectory = await getApplicationDocumentsDirectory();
    String path = join(documentsDirectory.path, "textdata.db");

    return await openDatabase(path, version: 1,
        onCreate: (Database db, int version) async {
          await db.execute("CREATE TABLE texts (id INTEGER PRIMARY KEY, content TEXT)");
        });
  }

  Future<int> insertText(String content) async {
    var client = await db;
    return await client.insert("texts", {"content": content});
  }

  Future<List<Map<String, dynamic>>> getAllTexts() async {
    var client = await db;
    return await client.query("texts");
  }
}
